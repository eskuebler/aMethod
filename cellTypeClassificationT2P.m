% cellTypeClassificationT2P

close all

% now looking at classifcation based on cell type means
meanNarrowPVp2t = mean(T2P.mouse.all(list.mouse.PV));
meanNarrowSSTp2t = mean(T2P.mouse.all(list.mouse.SST));
meanNarrowVIPp2t = mean(T2P.mouse.all(list.mouse.VIP));
meanPyrp2t = mean(T2P.mouse.all(list.mouse.Pyr));
figure('Position',[50 50 250 200]); set(gcf,'color','w');
    hold on
    histogram(T2P.mouse.all(list.mouse.Pyr),edges.T2P.IC,...
        'FaceColor','k','Normalization','probability','EdgeColor','none')
    histogram(T2P.mouse.all(list.mouse.VIP),edges.T2P.IC,...
        'FaceColor','b','Normalization','probability','EdgeColor','none')
    histogram(T2P.mouse.all(list.mouse.SST),edges.T2P.IC,...
        'FaceColor','g','Normalization','probability','EdgeColor','none')
    histogram(T2P.mouse.all(list.mouse.PV),edges.T2P.IC,...
        'FaceColor','r','Normalization','probability','EdgeColor','none')
    histogram(T2P.mouse.all,edges.T2P.IC,...
        'FaceColor',[0.85 0.85 0.85],'Normalization','probability','EdgeColor','none');
    line([meanNarrowPVp2t,meanNarrowPVp2t],[0,0.4],...
        'color','r','linewidth',1,'linestyle','--');
    line([meanNarrowSSTp2t,meanNarrowSSTp2t],[0,0.4],...
        'color','g','linewidth',1,'linestyle','--');
    line([meanNarrowVIPp2t,meanNarrowVIPp2t],[0,0.4],...
        'color','b','linewidth',1,'linestyle','--');
    line([meanPyrp2t,meanPyrp2t],[0,0.4],...
        'color','k','linewidth',1,'linestyle','--');
    plot(inflection.mouse.T2P.x,inflection.mouse.T2P.yfun1,'k','LineWidth',1);
    plot(inflection.mouse.T2P.x,inflection.mouse.T2P.yfun2,'k','LineWidth',1);
    line([inflection.mouse.T2P.peakLocs,...
        inflection.mouse.T2P.peakLocs],[0,0.125], ...
        'color','k','linewidth',1,'linestyle','--');
    ylabel('probability')
    xlabel('trough-to-peak (ms)')
    axis tight
    xlim([edges.T2P.IC(1) edges.T2P.IC(end)])

dist.T2P.PV2PV = abs(meanNarrowPVp2t-T2P.mouse.all(list.mouse.PV));
dist.T2P.PV2SST = abs(meanNarrowPVp2t-T2P.mouse.all(list.mouse.SST));
dist.T2P.PV2VIP = abs(meanNarrowPVp2t-T2P.mouse.all(list.mouse.VIP));
dist.T2P.PV2Pyr = abs(meanNarrowPVp2t-T2P.mouse.all(list.mouse.Pyr));
dist.T2P.SST2PV = abs(meanNarrowSSTp2t-T2P.mouse.all(list.mouse.PV));
dist.T2P.SST2SST = abs(meanNarrowSSTp2t-T2P.mouse.all(list.mouse.SST));
dist.T2P.SST2VIP = abs(meanNarrowSSTp2t-T2P.mouse.all(list.mouse.VIP));
dist.T2P.SST2Pyr = abs(meanNarrowSSTp2t-T2P.mouse.all(list.mouse.Pyr));
dist.T2P.VIP2PV = abs(meanNarrowVIPp2t-T2P.mouse.all(list.mouse.PV));
dist.T2P.VIP2SST = abs(meanNarrowVIPp2t-T2P.mouse.all(list.mouse.SST));
dist.T2P.VIP2VIP = abs(meanNarrowVIPp2t-T2P.mouse.all(list.mouse.VIP));
dist.T2P.VIP2Pyr = abs(meanNarrowVIPp2t-T2P.mouse.all(list.mouse.Pyr));
dist.T2P.Pyr2PV = abs(meanPyrp2t-T2P.mouse.all(list.mouse.PV));
dist.T2P.Pyr2SST = abs(meanPyrp2t-T2P.mouse.all(list.mouse.SST));
dist.T2P.Pyr2VIP = abs(meanPyrp2t-T2P.mouse.all(list.mouse.VIP));
dist.T2P.Pyr2Pyr = abs(meanPyrp2t-T2P.mouse.all(list.mouse.Pyr));

% distance classification
for i = 1:length(dist.T2P.PV2PV)
    vec = [dist.T2P.PV2PV(i),dist.T2P.SST2PV(i),dist.T2P.VIP2PV(i),...
        dist.T2P.Pyr2PV(i)];
    [~,loc] = min(vec);
    pred.T2P.PV(i) = loc;
end
for i = 1:length(dist.T2P.PV2SST)
    vec = [dist.T2P.PV2SST(i),dist.T2P.SST2SST(i),dist.T2P.VIP2SST(i),...
        dist.T2P.Pyr2SST(i)];
    [~,loc] = min(vec);
    pred.T2P.SST(i) = loc;
end
for i = 1:length(dist.T2P.PV2VIP)
    vec = [dist.T2P.PV2VIP(i),dist.T2P.SST2VIP(i),dist.T2P.VIP2VIP(i),...
        dist.T2P.Pyr2VIP(i)];
    [~,loc] = min(vec);
    pred.T2P.VIP(i) = loc;
end
for i = 1:length(dist.T2P.Pyr2Pyr)
    vec = [dist.T2P.PV2Pyr(i),dist.T2P.SST2Pyr(i),dist.T2P.VIP2Pyr(i),...
        dist.T2P.Pyr2Pyr(i)];
    [~,loc] = min(vec);
    pred.T2P.Pyr(i) = loc;
end
figure('Position',[50 50 200 200]); set(gcf,'color','w');
    mat = [sum(pred.T2P.PV==1)/length(pred.T2P.PV),...
        sum(pred.T2P.SST==1)/length(pred.T2P.SST),...
        sum(pred.T2P.VIP==1)/length(pred.T2P.VIP),...
        sum(pred.T2P.Pyr==1)/length(pred.T2P.Pyr);...
        sum(pred.T2P.PV==2)/length(pred.T2P.PV),...
        sum(pred.T2P.SST==2)/length(pred.T2P.SST),...
        sum(pred.T2P.VIP==2)/length(pred.T2P.VIP),...
        sum(pred.T2P.Pyr==2)/length(pred.T2P.Pyr);...
        sum(pred.T2P.PV==3)/length(pred.T2P.PV),...
        sum(pred.T2P.SST==3)/length(pred.T2P.SST),...
        sum(pred.T2P.VIP==3)/length(pred.T2P.VIP),...
        sum(pred.T2P.Pyr==3)/length(pred.T2P.Pyr);...
        sum(pred.T2P.PV==4)/length(pred.T2P.PV),...
        sum(pred.T2P.SST==4)/length(pred.T2P.SST),...
        sum(pred.T2P.VIP==4)/length(pred.T2P.VIP),...
        sum(pred.T2P.Pyr==4)/length(pred.T2P.Pyr)];
    imagesc(mat);
    colormap('gray')
    h = colorbar;
    ylabel(h, 'proportion')
    clear h
    xlabel('cell type')
    ylabel('putative cell type')
    xticks(1:4)
    xticklabels({'PV+','SST+','VIP+','Pyr'})
    yticks(1:4)
    yticklabels({'PV+','SST+','VIP+','Pyr'})
    axis equal
    axis tight
    box off
    dim = [.21 .74 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.PV==1)),...
        'FitBoxToText','on','LineStyle','none','color','k');
    dim = [.34 .74 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.SST==1)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.46 .74 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.VIP==1)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.59 .74 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.Pyr==1)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.24 .64 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.PV==2)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.34 .64 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.SST==2)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.46 .64 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.VIP==2)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.57 .64 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.Pyr==2)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.24 .52 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.PV==3)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.34 .52 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.SST==3)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.46 .52 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.VIP==3)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.57 .52 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.Pyr==3)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.24 .41 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.PV==4)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.35 .41 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.SST==4)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.48 .41 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.VIP==4)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.57 .41 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2P.Pyr==4)),...
        'FitBoxToText','on','LineStyle','none','color','k');
    clear h dim

%{
    EC
%}

meanPVvivop2t = mean(T2P.mouseVivo.all(list.mouseVivo.PV));
meanSSTvivop2t = mean(T2P.mouseVivo.all(list.mouseVivo.SST));
meanVIPvivop2t = mean(T2P.mouseVivo.all(list.mouseVivo.VIP));
meanBroadvivop2t = mean(T2P.mouseVivo.all(list.mouseVivo.broad));
figure('Position',[50 50 250 200]); set(gcf,'color','w');
    hold on
    histogram(T2P.mouseVivo.all(list.mouseVivo.PV),edges.T2P.EC,...
        'FaceColor','r','Normalization','probability','EdgeColor','none')
    histogram(T2P.mouseVivo.all(list.mouseVivo.SST),edges.T2P.EC,...
        'FaceColor','g','Normalization','probability','EdgeColor','none')
    histogram(T2P.mouseVivo.all(list.mouseVivo.VIP),edges.T2P.EC,...
        'FaceColor','b','Normalization','probability','EdgeColor','none')
    histogram(T2P.mouseVivo.all(list.mouseVivo.broad),edges.T2P.EC,...
        'FaceColor','k','Normalization','probability','EdgeColor','none')
    histogram(T2P.mouseVivo.all,edges.T2P.EC,...
        'FaceColor', [0.85 0.85 0.85],'Normalization','probability','EdgeColor','none');
    line([meanPVvivop2t,meanPVvivop2t],[0,0.38],...
        'color','r','linewidth',1,'linestyle','--');
    line([meanSSTvivop2t,meanSSTvivop2t],[0,0.38],...
        'color','g','linewidth',1,'linestyle','--');
    line([meanVIPvivop2t,meanVIPvivop2t],[0,0.38],...
        'color','b','linewidth',1,'linestyle','--');
    line([meanBroadvivop2t,meanBroadvivop2t],[0,0.38],...
        'color','k','linewidth',1,'linestyle','--');
    plot(inflection.mouseEC.T2P.x,inflection.mouseEC.T2P.yfun1,'k','LineWidth',1);
    plot(inflection.mouseEC.T2P.x,inflection.mouseEC.T2P.yfun2,'k','LineWidth',1);
    line([inflection.mouseEC.T2P.peakLocs,...
        inflection.mouseEC.T2P.peakLocs],[0,0.33],...
        'color','k','linewidth',1,'linestyle','--');
    ylabel('count')
    xlabel('trough-to-peak (ms)')
    axis tight
    xlim([edges.T2P.EC(1) edges.T2P.EC(end)])

dist.T2PVivo.PV2PV = abs(meanPVvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.PV));
dist.T2PVivo.SST2PV = abs(meanSSTvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.PV));
dist.T2PVivo.VIP2PV = abs(meanVIPvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.PV));
dist.T2PVivo.broad2PV = abs(meanBroadvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.PV));
dist.T2PVivo.PV2SST = abs(meanPVvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.SST));
dist.T2PVivo.VIP2SST = abs(meanVIPvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.SST));
dist.T2PVivo.SST2SST = abs(meanSSTvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.SST));
dist.T2PVivo.broad2SST = abs(meanBroadvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.SST));
dist.T2PVivo.PV2VIP = abs(meanPVvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.VIP));
dist.T2PVivo.SST2VIP = abs(meanSSTvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.VIP));
dist.T2PVivo.VIP2VIP = abs(meanVIPvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.VIP));
dist.T2PVivo.broad2VIP = abs(meanBroadvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.VIP));
dist.T2PVivo.PV2broad = abs(meanPVvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.broad));
dist.T2PVivo.SST2broad = abs(meanSSTvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.broad));
dist.T2PVivo.VIP2broad = abs(meanVIPvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.broad));
dist.T2PVivo.broad2broad = abs(meanBroadvivop2t-T2P.mouseVivo.all(...
    list.mouseVivo.broad));

% distance classification for EC cells
for i = 1:length(dist.T2PVivo.PV2PV)
    vec = [dist.T2PVivo.PV2PV(i),dist.T2PVivo.SST2PV(i),...
        dist.T2PVivo.VIP2PV(i),dist.T2PVivo.broad2PV(i)];
    [~,loc] = min(vec);
    pred.T2PVivo.PV(i) = loc;
end
for i = 1:length(dist.T2PVivo.PV2SST)
    vec = [dist.T2PVivo.PV2SST(i),dist.T2PVivo.SST2SST(i),...
        dist.T2PVivo.VIP2SST(i),dist.T2PVivo.broad2SST(i)];
    [~,loc] = min(vec);
    pred.T2PVivo.SST(i) = loc;
end
for i = 1:length(dist.T2PVivo.PV2VIP)
    vec = [dist.T2PVivo.PV2VIP(i),dist.T2PVivo.SST2VIP(i),...
        dist.T2PVivo.VIP2VIP(i),dist.T2PVivo.broad2VIP(i)];
    [~,loc] = min(vec);
    pred.T2PVivo.VIP(i) = loc;
end
for i = 1:length(dist.T2PVivo.PV2broad)
    vec = [dist.T2PVivo.PV2broad(i),dist.T2PVivo.SST2broad(i),...
        dist.T2PVivo.VIP2broad(i),dist.T2PVivo.broad2broad(i)];
    [~,loc] = min(vec);
    pred.T2PVivo.broad(i) = loc;
end

figure('Position',[50 50 200 200]); set(gcf,'color','w');
    mat = [sum(pred.T2PVivo.PV==1)/length(pred.T2PVivo.PV),...
        sum(pred.T2PVivo.SST==1)/length(pred.T2PVivo.SST),...
        sum(pred.T2PVivo.VIP==1)/length(pred.T2PVivo.VIP),...
        sum(pred.T2PVivo.broad==1)/length(pred.T2PVivo.broad);...
        sum(pred.T2PVivo.PV==2)/length(pred.T2PVivo.PV),...
        sum(pred.T2PVivo.SST==2)/length(pred.T2PVivo.SST),...
        sum(pred.T2PVivo.VIP==2)/length(pred.T2PVivo.VIP),...
        sum(pred.T2PVivo.broad==2)/length(pred.T2PVivo.broad);...
        sum(pred.T2PVivo.PV==3)/length(pred.T2PVivo.PV),...
        sum(pred.T2PVivo.SST==3)/length(pred.T2PVivo.SST),...
        sum(pred.T2PVivo.VIP==3)/length(pred.T2PVivo.VIP),...
        sum(pred.T2PVivo.broad==3)/length(pred.T2PVivo.broad);...
        sum(pred.T2PVivo.PV==4)/length(pred.T2PVivo.PV),...
        sum(pred.T2PVivo.SST==4)/length(pred.T2PVivo.SST),...
        sum(pred.T2PVivo.VIP==4)/length(pred.T2PVivo.VIP),...
        sum(pred.T2PVivo.broad==4)/length(pred.T2PVivo.broad)];
    imagesc(mat);
    colormap('gray')
    h = colorbar;
    ylabel(h, 'proportion')
    clear h
    xlabel('cell type')
    ylabel('prediction')
    xticks(1:4)
    xticklabels({'PV+','SST+','VIP+','broad'})
    yticks(1:4)
    yticklabels({'PV+','SST+','VIP+','broad'})
    axis equal
    axis tight
    box off
    
    dim = [.21 .74 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.PV==1)),...
        'FitBoxToText','on','LineStyle','none','color','k');
    dim = [.34 .74 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.SST==1)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.46 .74 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.VIP==1)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.59 .74 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.broad==1)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.24 .64 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.PV==2)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.34 .64 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.SST==2)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.46 .64 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.VIP==2)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.57 .64 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.broad==2)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.24 .52 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.PV==3)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.34 .52 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.SST==3)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.46 .52 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.VIP==3)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.57 .52 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.broad==3)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.24 .41 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.PV==4)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.35 .41 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.SST==4)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.48 .41 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.VIP==4)),...
        'FitBoxToText','on','LineStyle','none','color','w');
    dim = [.57 .41 0 0];
    annotation('textbox',dim,'String',int2str(sum(pred.T2PVivo.broad==4)),...
        'FitBoxToText','on','LineStyle','none','color','k');
    
clear h dim
    
close all
clear broad broadInd broadVivo broadVivoInd broadVivoRe fitresult ...
    fitresultBroadSW fitresultNarrowSW i loc mat maxHWdVdt ...
    maxHWdVdtEC meanBroadvivop2t meanNarrowPVp2t meanNarrowSSTp2t ...
    meanNarrowVIPp2t meanPVvivop2t meanPyrp2t meanSSTvivop2t ...
    minHWdVdt minHWdVdtEC n narrow narrowInd narrowVivo narrowVivoInd...
    narrowVivoRe vec wfCenters wfCounts wfFitCurveS wfHist